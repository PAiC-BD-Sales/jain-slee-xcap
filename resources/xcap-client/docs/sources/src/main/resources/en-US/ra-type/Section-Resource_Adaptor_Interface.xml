<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../User_Guide.ent">
%BOOK_ENTITIES;
]>

<section id="ratype_ra_interface">

	<title>Resource Adaptor Interface</title>

	<para>The &THIS.RA; Resource Adaptor interface, of type <literal>XCAPClientResourceAdaptorSbbInterface</literal>, which an SBB uses to create new <literal>AsyncActivity</literal> instances or send synchronous requests, its interface is defined as follows:</para>
	
	<programlisting language="Java" role="JAVA">
		<![CDATA[
package org.restcomm.slee.resource.xcapclient;

import javax.slee.resource.ActivityAlreadyExistsException;
import javax.slee.resource.StartActivityException;

import XcapClient;

public interface XCAPClientResourceAdaptorSbbInterface extends XcapClient {

	public AsyncActivity createActivity()
			throws ActivityAlreadyExistsException, StartActivityException;

}]]>
    </programlisting>
    
    <variablelist> 
    <varlistentry>
		<term>The <literal>createActivity()</literal> method:</term>
		<listitem>
			<para>Creates a new <literal>AsyncActivity</literal> instance.</para>
		</listitem>
	</varlistentry>
	</variablelist>
	
	<para>The &THIS.RA; Resource Adaptor interface extends type <literal>XcapClient</literal>, its interface is defined as follows:</para>
	
	<programlisting language="Java" role="JAVA">
		<![CDATA[
package org.restcomm.xcap.client;

import java.io.IOException;
import java.net.URI;

import Credentials;
import Header;

public interface XcapClient {

	public void setAuthenticationCredentials(Credentials credentials);

	public void unsetAuthenticationCredentials();

	public void shutdown();

	public XcapResponse get(URI uri, Header[] additionalRequestHeaders,
			Credentials credentials) throws IOException;

	public XcapResponse put(URI uri, String mimetype, String content,
			Header[] additionalRequestHeaders, Credentials credentials)
			throws IOException;

	public XcapResponse put(URI uri, String mimetype, byte[] content,
			Header[] additionalRequestHeaders, Credentials credentials)
			throws IOException;

	public XcapResponse putIfMatch(URI uri, String eTag, String mimetype,
			String content, Header[] additionalRequestHeaders,
			Credentials credentials) throws IOException;

	public XcapResponse putIfMatch(URI uri, String eTag, String mimetype,
			byte[] content, Header[] additionalRequestHeaders,
			Credentials credentials) throws IOException;

	public XcapResponse putIfNoneMatch(URI uri, String eTag, String mimetype,
			String content, Header[] additionalRequestHeaders,
			Credentials credentials) throws IOException;

	public XcapResponse putIfNoneMatch(URI uri, String eTag, String mimetype,
			byte[] content, Header[] additionalRequestHeaders,
			Credentials credentials) throws IOException;

	public XcapResponse delete(URI uri, Header[] additionalRequestHeaders,
			Credentials credentials) throws IOException;

	public XcapResponse deleteIfMatch(URI uri, String eTag,
			Header[] additionalRequestHeaders, Credentials credentials)
			throws IOException;

	public XcapResponse deleteIfNoneMatch(URI uri, String eTag,
			Header[] additionalRequestHeaders, Credentials credentials)
			throws IOException;

}]]>
    </programlisting>
    
    <variablelist>
    <varlistentry>
		<term>The <literal>setAuthenticationCredentials(Credentials)</literal> method:</term>
		<listitem>
			<para>Sets default authentication credentials to be used on XCAP requests, when those do not provide specific authentication credentials.</para>
		</listitem>
	</varlistentry>
	
	<varlistentry>
		<term>The <literal>unsetAuthenticationCredentials()</literal> method:</term>
		<listitem>
			<para>Unsets default authentication credentials.</para>
		</listitem>
	</varlistentry>
	
	<varlistentry>
		<term>The <literal>shutdown()</literal> method:</term>
		<listitem>
			<para>Unsupported operation.</para>
		</listitem>
	</varlistentry>
	
	<varlistentry>
		<term>The <literal>get(URI, Header[], Credentials)</literal> method:</term>
		<listitem>
			<para>Retrieves the XCAP resource specified by the URI parameter. Additional HTTP headers, to be added in the XCAP request, and authentication credentials can be specified too.</para>
		</listitem>
	</varlistentry>
	 
    <varlistentry>
		<term>The <literal>get(URI, Header[], Credentials)</literal> method:</term>
		<listitem>
			<para>Retrieves the XCAP resource specified by the URI parameter. Additional HTTP headers, to be added in the XCAP request, and authentication credentials can be specified too.</para>
		</listitem>
	</varlistentry>
	
	<varlistentry>
		<term>The <literal>put(URI, String, String, Header[], Credentials)</literal> method:</term>
		<listitem>
			<para>Puts the provided XML content, in <literal>String</literal> format, in the XCAP resource specified by the URI parameter. The request mimetype needs to be provided, according to the content type to be put. Additional HTTP headers, to be added in the XCAP request, and authentication credentials can be specified too.</para>
		</listitem>
	</varlistentry>
	
	<varlistentry>
		<term>The <literal>put(URI, String, byte[], Header[], Credentials)</literal> method:</term>
		<listitem>
			<para>Puts the provided XML content, in <literal>byte[]</literal> format, in the XCAP resource specified by the URI parameter. The request mimetype needs to be provided, according to the content type to be put. Additional HTTP headers, to be added in the XCAP request, and authentication credentials can be specified too.</para>
		</listitem>
	</varlistentry>
	
	<varlistentry>
		<term>The <literal>putIfMatch(URI, String, String, String, Header[], Credentials)</literal> method:</term>
		<listitem>
			<para>Conditional put of the provided XML content, in <literal>String</literal> format, in the XCAP resource specified by the URI parameter. The request only succeeds if the XCAP resource entity tag matches the provided <literal>eTag</literal> parameter. The request mimetype needs to be provided, according to the content type to be put. Additional HTTP headers, to be added in the XCAP request, and authentication credentials can be specified too.</para>
		</listitem>
	</varlistentry>
	
	<varlistentry>
		<term>The <literal>putIfMatch(URI, String, String, byte[], Header[], Credentials)</literal> method:</term>
		<listitem>
			<para>Conditional put of the provided XML content, in <literal>byte[]</literal> format, in the XCAP resource specified by the URI parameter. The request only succeeds if the XCAP resource entity tag matches the provided <literal>eTag</literal> parameter. The request mimetype needs to be provided, according to the content type to be put. Additional HTTP headers, to be added in the XCAP request, and authentication credentials can be specified too.</para>
		</listitem>
	</varlistentry>
	
	<varlistentry>
		<term>The <literal>putIfNoneMatch(URI, String, String, String, Header[], Credentials)</literal> method:</term>
		<listitem>
			<para>Conditional put of the provided XML content, in <literal>String</literal> format, in the XCAP resource specified by the URI parameter. The request only succeeds if the XCAP resource entity tag doesn't match the provided <literal>eTag</literal> parameter. The request mimetype needs to be provided, according to the content type to be put. Additional HTTP headers, to be added in the XCAP request, and authentication credentials can be specified too.</para>
		</listitem>
	</varlistentry>
	
	<varlistentry>
		<term>The <literal>putIfNoneMatch(URI, String, String, byte[], Header[], Credentials)</literal> method:</term>
		<listitem>
			<para>Conditional put of the provided XML content, in <literal>byte[]</literal> format, in the XCAP resource specified by the URI parameter. The request only succeeds if the XCAP resource entity tag doesn't match the provided <literal>eTag</literal> parameter. The request mimetype needs to be provided, according to the content type to be put. Additional HTTP headers, to be added in the XCAP request, and authentication credentials can be specified too.</para>
		</listitem>
	</varlistentry>
	
	<varlistentry>
		<term>The <literal>delete(URI, Header[], Credentials)</literal> method:</term>
		<listitem>
			<para>Deletes the XCAP resource specified by the URI parameter. Additional HTTP headers, to be added in the XCAP request, and authentication credentials can be specified too.</para>
		</listitem>
	</varlistentry>
	
	<varlistentry>
		<term>The <literal>deleteIfMatch(URI, String, Header[], Credentials)</literal> method:</term>
		<listitem>
			<para>Conditional delete of the XCAP resource specified by the URI parameter. The request only succeeds if the XCAP resource entity tag matches the provided <literal>eTag</literal> parameter. Additional HTTP headers, to be added in the XCAP request, and authentication credentials can be specified too.</para>
		</listitem>
	</varlistentry>
	
	<varlistentry>
		<term>The <literal>deleteIfNoneMatch(URI, String, Header[], Credentials)</literal> method:</term>
		<listitem>
			<para>Conditional delete of the XCAP resource specified by the URI parameter. The request only succeeds if the XCAP resource entity tag doesn't match the provided <literal>eTag</literal> parameter. Additional HTTP headers, to be added in the XCAP request, and authentication credentials can be specified too.</para>
		</listitem>
	</varlistentry>
	</variablelist>
</section>