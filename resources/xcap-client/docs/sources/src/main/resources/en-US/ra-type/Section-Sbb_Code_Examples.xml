<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../User_Guide.ent">
%BOOK_ENTITIES;
]>

<section id="ratype_sbb_code_examples">

	<title>Sbb Code Examples</title>

	<para>The following code examples shows how to use the Resource Adaptor Type for common functionalities</para>
	
	<section id="ratype_sbb_code_examples_sync_operations">

		<title>Synchronous Operations</title>

		<para>The following code examples the usage of the RA's SBB Interface to send synchronous XCAP requests:</para>
		
		<programlisting language="Java" role="JAVA">
<![CDATA[
		// create auth credentials
		Credentials credentials = ra.getCredentialsFactory()
				.getHttpDigestCredentials(username,password);
			
		// create doc uri
		String documentSelector = DocumentSelectorBuilder
			.getUserDocumentSelectorBuilder("resource-lists", userName, documentName)
			.toPercentEncodedString();
		UriBuilder uriBuilder = new UriBuilder()
			.setSchemeAndAuthority("http://127.0.0.1:8080")
			.setXcapRoot("/restcomm")
			.setDocumentSelector(documentSelector);
		URI documentURI = uriBuilder.toURI();
		
		// the doc to put
		String initialDocument =
			"<?xml version=\"1.0\" encoding=\"UTF-8\"?>" +
			"<resource-lists xmlns=\"urn:ietf:params:xml:ns:resource-lists\">" +
				"<list name=\"friends\"/>" +
			"</resource-lists>";						
		
		// put the document and get sync response
		XcapResponse response = ra.put(documentURI, 
			"application/resource-lists+xml", initialDocument, null, credentials);
		
		// check put response
		if (response != null) {
			if(response.getCode() == 200 || response.getCode() == 201) {
				log.info("document created in xcap server...");
			} else {
				log.severe("bad response from xcap server: "+response.toString());
			}
		} else {
			log.severe("unable to create document in xcap server...");
		}
					
		// let's create an uri selecting an element
		// create uri
		String elementSelector = new ElementSelectorBuilder()
			.appendStepByName("resource-lists")
			.appendStepByAttr("list","name","friends")
			.appendStepByAttr("entry","uri","sip:alice@example.com")
			.toPercentEncodedString();
		URI elementURI = uriBuilder.setElementSelector(elementSelector).toURI();
		
		// put an element and get sync response
		String element = 
			"<entry uri=\"sip:alice@example.com\" xmlns=\"urn:ietf:params:xml:ns:resource-lists\"/>";
		response = ra.put(elementURI,ElementResource.MIMETYPE,element,null,credentials);
		
		// check put response
		if (response != null) {
			if(response.getCode() == 201) {
				log.info("element created in xcap server...");
			} else {
				log.severe("bad response from xcap server: "+response.toString());
			}
		} else {
			log.severe("unable to create element in xcap server...");
		}
				
		// get the document and check content is ok
		response = ra.get(documentURI,null,credentials);
		
		// check get response		
		if (response != null) {
			if(response.getCode() == 200) {
				log.info("document successfully retreived in xcap server.");
				// delete the document
				ra.delete(documentURI,null,credentials);		
			} else {
				log.severe("bad response from xcap server: "+response.toString());
			}
		} else {
			log.severe("unable to retreive document in xcap server...");
		}]]>
		</programlisting>
	</section>

	<section id="ratype_sbb_code_examples_async_operations">

		<title>Asynchronous Operations</title>

		<para>The following code examples the usage of the AsyncActivity to send async XCAP requests, the optimal way to use the RA, since it doesn't block the SLEE container event routing threads:</para>
		
		<programlisting language="Java" role="JAVA">
			<![CDATA[
		// now we will use JAXB marshalling and unmarshalling too
						
		// let's create a list containing  someone
		ObjectFactory of = new ObjectFactory();
		ListType listType = of.createListType();
		listType.setName("enemies");
		EntryType entry = of.createEntryType();
		entry.setUri("sip:winniethepooh@disney.com");
		listType.getListOrExternalOrEntry().add(entry);
		
		// create the uri selecting the new element
		String elementSelector = new ElementSelectorBuilder()
			.appendStepByName("resource-lists")
			.appendStepByAttr("list","name","enemies")
			.toPercentEncodedString();
		String documentSelector = DocumentSelectorBuilder
			.getUserDocumentSelectorBuilder("resource-lists", userName, documentName)
			.toPercentEncodedString();
		UriBuilder uriBuilder = new UriBuilder()
		.setSchemeAndAuthority("http://127.0.0.1:8080")
		.setXcapRoot("/restcomm")
		.setDocumentSelector(documentSelector)
		.setElementSelector(elementSelector);
		URI uri = uriBuilder.toURI();
		
		// marshall content to byte array
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		jAXBContext.createMarshaller().marshal(listType, baos);
		
		// lets put the element using the sync interface
		XcapResponse response = ra.put(uri,ElementResource.MIMETYPE,
			baos.toByteArray(),null,credentials);
		// check put response
		if (response != null) {
			if(response.getCode() == 201) {
				log.info("list element created in xcap server...");
			} else {
				log.severe("bad response from xcap server: "+response.toString());
			}
		} else {
			log.severe("unable to create list element in xcap server...");
		}
		
		// now lets get it using the async interface
		
		// get a async request activity from the xcap client ra
		AsyncActivity activity = ra.createActivity();
		
		// attach this sbb entity to the activity's related aci 
		ActivityContextInterface aci = acif.getActivityContextInterface(activity);
		aci.attach(sbbContext.getSbbLocalObject());
		
		// send request
		activity.get(uri,null,credentials);]]>
		</programlisting>
		
		<para>And the next code snippet examples the handling of the ResponseEvent, and the ending of the activity instance:</para>
		
		<programlisting language="Java" role="JAVA">
			<![CDATA[
	public void onGetResponseEvent(ResponseEvent event, ActivityContextInterface aci) {
				
		// check put response
		XcapResponse response = event.getResponse();
		if (response != null) {
			if(response.getCode() == 200) {
				log.info("list element retreived from xcap server...");
			} else {
				log.severe("bad response from xcap server: "+response.toString());
			}
		} else {
			log.severe("unable to create list element in xcap server...");
		}
						
		// end the activity
		AsyncActivity activity = (AsyncActivity)aci.getActivity();
		if (activity != null) {
			activity.endActivity();
		}
		
	}]]>
		</programlisting>
		
	</section>
	
</section>